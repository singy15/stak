
<style>
.descriptionView table {
  border: 1px #000000 solid;
  border-collapse: collapse;
}
.descriptionView td {
  border: 1px #000000 solid;
}
.descriptionView th {
  border: 1px #000000 solid;
}
.icon {
 cursor: pointer
}
.link {
  cursor: pointer;
  text-decoration: underline;
}
.tree-icon {
  display : none;
}
.tree-checkbox0 {
  opacity : 0.3;
}
.tree-checkbox1 {
  opacity : 1.0;
}
.tree-indent {
  opacity : 0.5;
}
.datagrid-row-selected  td {
  /*background: #ffe48d;*/
  /*background: #ffffff;*/
  /*color: #FF0000;*/
  /*font-weight : bold;*/
  background-color:rgba( 0, 0, 0, 0.2 );
  color : #000;
}
.datagrid-row-selected {
  /*background-color:rgba( 0, 0, 0, 0.1 );*/
  background: #ffffff;
}
.datagrid-row{
    height: 10px;
}
</style>

<div id="vue-main" class="vue-component">
  <div class="easyui-panel" style="width:100%;margin-bottom:5px;">
    <div id="dg" class="easyui-treegrid" style="width:100%"></div>
  </div>
  <div class="easyui-panel" style="width:100%;padding:5px;margin-bottom:5px;">
    <!-- Set to width:100% cause overflow when toggle sidebar -->
    <%= erb :part_users_form %>
  </div>
  <div class="easyui-panel" style="width:100%;padding:5px;margin-bottom:5px;">
    <input id="btnRegister" type="button" value="Register" class="input-register"/>
    <input id="btnNew" type="button" value="New" class="input-register"/>
    <input id="btnCopy" type="button" value="Copy" class="input-register"/>
    <input id="btnDelete" type="button" value="Delete" class="input-register"/>
  </div>
</div>
<script type="text/javascript">
  //function mapper(field, map) {
  //  var col = field;
  //  var kv = {};
  //  for(var i = 0; i < map.length; i+=1) {
  //    kv[map[i]["value"]] = map[i]["text"];
  //  }

  //  return function(value,row,index) { return kv[row[col]]; }
  //}

  $(document).ready(function() {
  //  autosize($('textarea'));

    $("#btnNew").click(function() {
      singleNew(vue, "row", $("#dg"), newRecord);
    });

    $("#btnCopy").click(function() {
      singleCopy(vue, "row", $("#dg"), copyRecord);
    });

    $("#btnDelete").click(function() {
      if(vue.row.user_cd !== "") {
        singleDel(vue, "users", "row", "user_cd", $("#dg"), newRecord);
      }
    });

    $("#btnRegister").click(function() {
      // if(vue.multiRowSelected) {
      //   batchUpd(vue, "row", "rowSelections", $("#dg"), newRecord, "tasks");
      // } else {
        singleInsUpd(vue, "row", $("#dg"), newRecord, "users");
      // }
    });

    $("#dg").treegrid({
      url : '/users',
      method : 'get',
      // sortName : "user_cd",
      multiSort : true,
      remoteSort : true,
      ctrlSelect : true,
      remoteFilter : true,
      pagination : true,
      rownumbers:true,
      filterDelay : 700,
      idField : "user_cd",
      columns : [[
        {field : 'user_cd', title : 'User CD', width : 90, sortable : true},
        {field : 'name', title : 'Name', width: 200, sortable : true},
        {field : 'created', title : 'Created', sortable : true},
        {field : 'created_by', title : 'Created by', sortable : true},
        {field : 'updated', title : 'Updated', sortable : true},
        {field : 'updated_by', title : 'Updated by', sortable : true}
      ]],
      onClickRow : function(row) {
        //if($("#dg").treegrid("getSelections").length > 1) {
        //  vue.multiRowSelected = true;
        //  vue.row = blankRecordForBatchUpdate();
        //} else {
        //  vue.multiRowSelected = false;
        //  vue.row = $.extend(true, {}, row);
        //}

        //vue.rowSelections = $("#dg").treegrid("getSelections");

        vue.row = $.extend(true, {}, row);
      },
      onLoadSuccess : function() {
        //if(($("#dg").treegrid("getSelections").length) == 1){
        //  var cd = ($("#dg").treegrid("getSelections")[0]).task_cd;
        //  $("#dg").treegrid("clearSelections");
        //  //$("#dg").treegrid("selectRecord", cd);
        //  $("#dg").treegrid("select", cd);
        //  var row = $("#dg").treegrid("getSelected");
        //  vue.multiRowSelected = false;
        //  vue.row = $.extend(true, {}, row);
        //} else {
        //  $("#dg").treegrid("clearSelections");
        //}
      }
    });

    //$("#dg").treegrid("options").url = "/tasks";
    //$("#dg").treegrid("load");
  });
</script>
<script>
  function newRecord() {
    return { 
      user_cd : "",
      name : "",
      created: "",
      created_by : "",
      updated: "",
      updated_by : ""
    };
  }

  function copyRecord() {
    var source = vue.row;
    var record = newRecord();
    record.user_cd = "";
    record.name = source.name;
    return record;
  }
//
//
//  function blankRecordForBatchUpdate() {
//    return { 
//      solution_cd : "",
//      task_cd : "",
//      task_type : "",
//      name : "",
//      status_type : "",
//      description : "",
//      priority_type : "",
//      created: "",
//      created_by : "",
//      updated: "",
//      updated_by : "",
//      parent_cd : ""
//    };
//  }
//

var vue = new Vue({
  el: '#vue-main',
  data: {
    row : newRecord()
  },
  computed: {
    dispUserCd: function() {
      return (this.row.user_cd)? this.row.user_cd : "NEW";
    }
  }
});
</script>

